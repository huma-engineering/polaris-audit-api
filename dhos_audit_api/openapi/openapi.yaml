openapi: 3.0.3
info:
  description: The DHOS Audit API is responsible for storing and retrieving audit
    events.
  title: DHOS Audit API
  version: 1.1.0
paths:
  /running:
    get:
      summary: Verify service is running
      description: Verifies that the service is running. Used for monitoring in kubernetes.
      tags:
      - monitoring
      responses:
        '200':
          description: If we respond, we are running
          content:
            application/json:
              schema:
                type: object
                properties:
                  running:
                    type: boolean
                    example: true
      operationId: flask_batteries_included.blueprint_monitoring.app_running
  /version:
    get:
      summary: Get version information
      description: Get the version number, circleci build number, and git hash.
      tags:
      - monitoring
      responses:
        '200':
          description: Version numbers
          content:
            application/json:
              schema:
                type: object
                properties:
                  circle:
                    type: string
                    example: '1234'
                  hash:
                    type: string
                    example: 366c204
      operationId: flask_batteries_included.blueprint_monitoring.app_version
  /dhos/v1/event/{event_id}:
    get:
      summary: Get event
      description: Get an event by ID
      tags:
      - event
      parameters:
      - name: event_id
        in: path
        required: true
        description: The event ID
        schema:
          type: string
          example: 2126393f-c86b-4bf2-9f68-42bb03a7b68a
      responses:
        '200':
          description: An event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseV1'
        default:
          description: Error, e.g. 404 Not Found, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.get_event_v1
      security:
      - bearerAuth: []
  /dhos/v1/event:
    get:
      summary: Get events by filter
      description: Get a list of events, filtered by event creator and/or event type
      tags:
      - event
      parameters:
      - name: creator
        in: query
        required: false
        description: The UUID of the event creator to filter by
        schema:
          type: string
          example: 2e049188-733d-40f6-8db5-b8ae6f5b2911
      - name: type
        in: query
        required: false
        description: The type of the event to filter by
        schema:
          type: string
          example: Login Success
      - name: start_date
        in: query
        required: false
        description: The start date in YYYY-MM-DD format (inclusive) of the event
          to filter by
        schema:
          type: string
          example: '2020-06-01'
      - name: end_date
        in: query
        required: false
        description: The end date in YYYY-MM-DD format (inclusive) of the event to
          filter by
        schema:
          type: string
          example: '2020-06-30'
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponseV1'
        default:
          description: Error, e.g. 400 Bad Request, 404 Not Found, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.get_events_v1
      security:
      - bearerAuth: []
    post:
      summary: Create a new event
      description: Create a new audit event
      tags:
      - event
      requestBody:
        description: JSON body containing the event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequestV1'
              x-body-name: event_details
      responses:
        '200':
          description: New event
          headers:
            Location:
              description: The location of the created event
              schema:
                type: string
                example: http://localhost/dhos/v1/event/f8d2c136-d2a7-43c4-be9e-3fb882923a58
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseV1'
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.create_event_v1
      security:
      - bearerAuth: []
  /dhos/v2/event/{event_uuid}:
    get:
      summary: Get event
      description: Get an event by UUID
      tags:
      - event
      parameters:
      - name: event_uuid
        in: path
        required: true
        description: The event UUID
        schema:
          type: string
          example: 2126393f-c86b-4bf2-9f68-42bb03a7b68a
      responses:
        '200':
          description: An event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        default:
          description: Error, e.g. 404 Not Found, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.get_event
      security:
      - bearerAuth: []
  /dhos/v2/event:
    get:
      summary: Get events by filter
      description: Get a list of events, filtered by event creator and/or event type
      tags:
      - event
      parameters:
      - name: creator
        in: query
        required: false
        description: The UUID of the event creator to filter by
        schema:
          type: string
          example: 2e049188-733d-40f6-8db5-b8ae6f5b2911
      - name: event_type
        in: query
        required: false
        description: The type of the event to filter by
        schema:
          type: string
          example: Login Success
      - name: start_date
        in: query
        required: false
        description: The start date in YYYY-MM-DD format (inclusive) of the event
          to filter by
        schema:
          type: string
          example: '2020-06-01'
      - name: end_date
        in: query
        required: false
        description: The end date in YYYY-MM-DD format (inclusive) of the event to
          filter by
        schema:
          type: string
          example: '2020-06-30'
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
        default:
          description: Error, e.g. 400 Bad Request, 404 Not Found, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.get_events
      security:
      - bearerAuth: []
    post:
      summary: Create a new event
      description: Create a new audit event
      tags:
      - event
      requestBody:
        description: JSON body containing the event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
              x-body-name: event_details
      responses:
        '201':
          description: New event
          headers:
            Location:
              description: The location of the created event
              schema:
                type: string
                example: http://localhost/dhos/v1/event/f8d2c136-d2a7-43c4-be9e-3fb882923a58
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_audit_api.blueprint_api.create_event
      security:
      - bearerAuth: []
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          description: HTTP response code
          example: 404
        message:
          type: string
          description: Message attached to response
          example: Not Found
      required:
      - code
      description: An error response in json format
    EventSchema:
      type: object
      properties:
        event_type:
          type: string
          example: Login Success
          description: The type of the event
        event_data:
          type: object
          example: &id001
            device_uuid: 4419c048-8094-4fb8-8379-fd122d73e7f7
            clinician_uuid: b277ff62-850b-49a1-be37-4c41da9b5a58
            something_really_important: '42'
          description: Arbitrary event JSON data
          additionalProperties: {}
      required:
      - event_data
      - event_type
      title: Event fields common to request and response
    EventRequest:
      type: object
      properties:
        event_type:
          type: string
          example: Login Success
          description: The type of the event
        event_data:
          type: object
          example: *id001
          description: Arbitrary event JSON data
          additionalProperties: {}
      required:
      - event_data
      - event_type
      title: Event request v2
    EventResponse:
      type: object
      properties:
        event_type:
          type: string
          example: Login Success
          description: The type of the event
        event_data:
          type: object
          example: *id001
          description: Arbitrary event JSON data
          additionalProperties: {}
        uuid:
          type: string
          description: Universally unique identifier for object
          example: 2c4f1d24-2952-4d4e-b1d1-3637e33cc161
        created:
          type: string
          description: When the object was created
          example: '2017-09-23T08:29:19.123+00:00'
        created_by:
          type: string
          description: UUID of the user that created the object
          example: d26570d8-a2c9-4906-9c6a-ea1a98b8b80f
        modified:
          type: string
          description: When the object was modified
          example: '2017-09-23T08:29:19.123+00:00'
        modified_by:
          type: string
          description: UUID of the user that modified the object
          example: 2a0e26e5-21b6-463a-92e8-06d7290067d0
      required:
      - event_data
      - event_type
      - uuid
      title: Event response v2
    EventSchemaV1:
      type: object
      properties:
        type:
          type: string
          example: Login Success
          description: The type of the event
        description:
          type: string
          example: Authentication successful for '74780805-0a75-4bc3-99fb-3e3a64986cac'
          description: The description of the event
        target:
          type: string
          example: 74780805-0a75-4bc3-99fb-3e3a64986cac
          description: The UUID of the user targeted by the event
        source:
          type: string
          example: 2be8be81-d07a-4dae-8ad7-63cbf5afb8f2
          description: The UUID of the user who created/modified by the event
      required:
      - description
      - source
      - type
      title: Event fields common to request and response
    EventRequestV1:
      type: object
      properties:
        type:
          type: string
          example: Login Success
          description: The type of the event
        description:
          type: string
          example: Authentication successful for '74780805-0a75-4bc3-99fb-3e3a64986cac'
          description: The description of the event
        target:
          type: string
          example: 74780805-0a75-4bc3-99fb-3e3a64986cac
          description: The UUID of the user targeted by the event
        source:
          type: string
          example: 2be8be81-d07a-4dae-8ad7-63cbf5afb8f2
          description: The UUID of the user who created/modified by the event
      required:
      - description
      - source
      - type
      title: Event request v1
    EventResponseV1:
      type: object
      properties:
        type:
          type: string
          example: Login Success
          description: The type of the event
        description:
          type: string
          example: Authentication successful for '74780805-0a75-4bc3-99fb-3e3a64986cac'
          description: The description of the event
        target:
          type: string
          example: 74780805-0a75-4bc3-99fb-3e3a64986cac
          description: The UUID of the user targeted by the event
        source:
          type: string
          example: 2be8be81-d07a-4dae-8ad7-63cbf5afb8f2
          description: The UUID of the user who created/modified by the event
        uuid:
          type: string
          description: Universally unique identifier for object
          example: 2c4f1d24-2952-4d4e-b1d1-3637e33cc161
        created:
          type: string
          description: When the object was created
          example: '2017-09-23T08:29:19.123+00:00'
        created_by:
          type: string
          description: UUID of the user that created the object
          example: d26570d8-a2c9-4906-9c6a-ea1a98b8b80f
        modified:
          type: string
          description: When the object was modified
          example: '2017-09-23T08:29:19.123+00:00'
        modified_by:
          type: string
          description: UUID of the user that modified the object
          example: 2a0e26e5-21b6-463a-92e8-06d7290067d0
      required:
      - description
      - source
      - type
      - uuid
      title: Event response v1
  responses:
    BadRequest:
      description: Bad or malformed request was received
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: Service or dependent resource not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
